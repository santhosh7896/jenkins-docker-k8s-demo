pipeline {
    agent any

    environment {
        DOCKER_HUB_USERNAME = credentials('dockerhub-username')  // Docker Hub username
        DOCKER_HUB_PASSWORD = credentials('dockerhub-password')  // Docker Hub password
        IMAGE_NAME = "santhosh7896/demo-app"
    }

    stages {

        stage('Checkout Code') {
            steps {
                git credentialsId: 'github-credentials', url: 'https://github.com/santhosh7896/jenkins-docker-k8s-demo.git', branch: 'master'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Use short git commit hash as image tag
                    IMAGE_TAG = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                    sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} -f jenkins-docker-k8s-demo/Dockerfile jenkins-docker-k8s-demo/"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([string(credentialsId: 'dockerhub-password', variable: 'DOCKER_PASS')]) {
                    sh """
                        echo $DOCKER_PASS | docker login -u $DOCKER_HUB_USERNAME --password-stdin
                        docker push ${IMAGE_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Replace the image in deployment.yaml dynamically
                    sh """
                        sed -i 's|image:.*|image: ${IMAGE_NAME}:${IMAGE_TAG}|' jenkins-docker-k8s-demo/k8s/deployment.yaml
                        kubectl apply -f jenkins-docker-k8s-demo/k8s/deployment.yaml
                        kubectl apply -f jenkins-docker-k8s-demo/k8s/service.yaml
                    """
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline finished successfully. Docker image pushed and deployed to Kubernetes!"
        }
        failure {
            echo "Pipeline failed. Check logs for details."
        }
    }
}
