pipeline {
    agent any

    environment {
        // Docker Hub credentials (Username + PAT stored in Jenkins)
        DOCKER_HUB_USERNAME = credentials('docker-hub-creds')  // ID of Docker Hub credentials
        DOCKER_HUB_PASSWORD = credentials('docker-hub-creds')  // Same credentials ID
    }

    stages {
        stage('Checkout Code') {
            steps {
                git(
                    url: 'https://github.com/santhosh7896/jenkins-docker-k8s-demo.git',
                    credentialsId: 'github-credentials',  // GitHub personal access token stored in Jenkins
                    branch: 'master'
                )
            }
        }

        stage('Build Docker Image') {
            steps {
                sh """
                    docker build -t ${DOCKER_HUB_USERNAME}/demo-app:latest -f jenkins-docker-k8s-demo/Dockerfile jenkins-docker-k8s-demo/
                """
            }
        }

        stage('Push to Docker Hub') {
            steps {
                sh """
                    echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin
                    docker push ${DOCKER_HUB_USERNAME}/demo-app:latest
                """
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-id', variable: 'KUBECONFIG')]) {
                    sh 'kubectl apply -f jenkins-docker-k8s-demo/k8s/deployment.yaml'
                    sh 'kubectl apply -f jenkins-docker-k8s-demo/k8s/service.yaml'
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline finished successfully! Docker image pushed and deployed to Kubernetes."
        }
        failure {
            echo "Pipeline failed. Check logs for details."
        }
    }
}

