pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME = "demo-app"
        K8S_MANIFEST_PATH = "jenkins-docker-k8s-demo/k8s"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git(
                    url: 'https://github.com/santhosh7896/jenkins-docker-k8s-demo.git',
                    credentialsId: 'github-credentials',
                    branch: 'master'
                )
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Use Git commit hash as image tag
                    IMAGE_TAG = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                }

                withCredentials([
                    usernamePassword(
                        credentialsId: 'docker-hub-creds', 
                        usernameVariable: 'DOCKER_USER', 
                        passwordVariable: 'DOCKER_PASS'
                    )
                ]) {
                    sh """
                        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                        docker build -t $DOCKER_USER/$DOCKER_IMAGE_NAME:$IMAGE_TAG -f jenkins-docker-k8s-demo/Dockerfile jenkins-docker-k8s-demo/
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([
                    usernamePassword(
                        credentialsId: 'docker-hub-creds', 
                        usernameVariable: 'DOCKER_USER', 
                        passwordVariable: 'DOCKER_PASS'
                    )
                ]) {
                    sh """
                        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                        docker push $DOCKER_USER/$DOCKER_IMAGE_NAME:$IMAGE_TAG
                    """
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-id', variable: 'KUBECONFIG')]) {
                    sh """
                        kubectl apply -f $K8S_MANIFEST_PATH/deployment.yaml
                        kubectl apply -f $K8S_MANIFEST_PATH/service.yaml
                    """
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline succeeded! Image pushed: $DOCKER_USER/$DOCKER_IMAGE_NAME:$IMAGE_TAG"
        }
        failure {
            echo "Pipeline failed. Check logs for details."
        }
    }
}
